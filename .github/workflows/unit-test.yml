name: go-unit-test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Extract Go version from go.mod
        id: go-version
        run: |
          go_version=$(grep -E '^go [0-9]+\.[0-9]+' go.mod | awk '{print $2}')
          echo "GO_VERSION=$go_version" >> $GITHUB_ENV

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Download dependencies
        run: go mod download

      - name: Run tests with coverage
        run: go test -coverprofile=coverage.out ./...

      - name: Upload coverage results
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage.out

      # - name: Generate test summary
      #   id: test-summary
      #   run: |
      #     if [ -f coverage.out ]; then
      #       total_coverage=$(go tool cover -func=coverage.out | grep 'total:' | awk '{print $3}')
      #       echo "Test passed successfully. Code coverage: $total_coverage"
      #       echo "RESULT=Test passed. Coverage: $total_coverage" >> $GITHUB_ENV
      #     else
      #       echo "Test failed or no coverage file generated."
      #       echo "RESULT=Test failed. No coverage file." >> $GITHUB_ENV